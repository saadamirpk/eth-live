[{"/Users/saadamirpk/Documents/GitHub/eth-live/src/index.tsx":"1","/Users/saadamirpk/Documents/GitHub/eth-live/src/reportWebVitals.ts":"2","/Users/saadamirpk/Documents/GitHub/eth-live/src/App.tsx":"3","/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/CandleStickChart.tsx":"4","/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/Ticker.tsx":"5"},{"size":554,"mtime":1653028157857,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1653028157857,"results":"8","hashOfConfig":"7"},{"size":342,"mtime":1653059011058,"results":"9","hashOfConfig":"7"},{"size":2011,"mtime":1653220506234,"results":"10","hashOfConfig":"7"},{"size":2292,"mtime":1653228747879,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"czrgj9",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saadamirpk/Documents/GitHub/eth-live/src/index.tsx",[],[],"/Users/saadamirpk/Documents/GitHub/eth-live/src/reportWebVitals.ts",[],[],"/Users/saadamirpk/Documents/GitHub/eth-live/src/App.tsx",["31"],[],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CandleStickChart from \"./Components/CandleStickChart\";\nimport Ticker from \"./Components/Ticker\";\n\nfunction App() {\n  return (\n    <div>\n      <Ticker />\n      <div id=\"chart\">\n        <CandleStickChart />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/CandleStickChart.tsx",["32","33","34"],[],"import { ApexOptions } from \"apexcharts\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nfunction CandleStickChart(props: any) {\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      type: \"candlestick\",\n    },\n    title: {\n      text: \"USDT - ETH CandleStick Chart\",\n      align: \"left\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true,\n      },\n      labels: {\n        formatter: function (value) {\n          return \"$\" + value;\n        },\n      },\n    },\n  });\n\n  const [series, setSeries] = useState<ApexAxisChartSeries>([]);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const response = await fetch(\n      \"https://poloniex.com/public?command=returnChartData&currencyPair=USDT_ETH&start=1608336000&end=9999999999&period=86400\"\n    );\n    const dataPoints = await response.json();\n\n    const fulldataArr = dataPoints.map((point: any) => {\n      const dateMsStr = point.date.toString() + \"000\";\n      return {\n        x: new Date(Number.parseInt(dateMsStr)),\n        y: [point.open, point.high, point.low, point.close],\n      };\n    });\n\n    //const quarterDataArr = extractData(dataPoints);\n\n    setSeries([\n      {\n        data: [...fulldataArr],\n      },\n    ]);\n  };\n\n  function extractData(dataPoints: any[]) {\n    let arr: any[] = [];\n    const totalData = dataPoints.length;\n    const startPoint = Math.round((totalData / 4) * 3);\n    for (let i = startPoint; i < totalData; i++) {\n      arr.push({\n        x: new Date(dataPoints[i].date),\n        y: [\n          dataPoints[i].open,\n          dataPoints[i].high,\n          dataPoints[i].low,\n          dataPoints[i].close,\n        ],\n      });\n    }\n    return arr;\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"mixed-chart\">\n        <Chart options={options} series={series} type=\"candlestick\" />\n      </div>\n    </div>\n  );\n}\n\nexport default CandleStickChart;\n",[],"/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/Ticker.tsx",[],[],{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":2,"column":17,"nodeType":"37","messageId":"38","endLine":2,"endColumn":26},{"ruleId":"35","severity":1,"message":"40","line":6,"column":19,"nodeType":"37","messageId":"38","endLine":6,"endColumn":29},{"ruleId":"35","severity":1,"message":"41","line":58,"column":12,"nodeType":"37","messageId":"38","endLine":58,"endColumn":23},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'setOptions' is assigned a value but never used.","'extractData' is defined but never used."]