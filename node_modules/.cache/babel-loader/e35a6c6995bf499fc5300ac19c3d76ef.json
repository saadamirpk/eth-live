{"ast":null,"code":"var _jsxFileName = \"/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/CandleStickChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CandleStickChart(props) {\n  _s();\n\n  const [options, setOptions] = useState({\n    chart: {\n      type: \"candlestick\"\n    },\n    title: {\n      text: \"CandleStick Chart\",\n      align: \"left\"\n    },\n    xaxis: {\n      type: \"datetime\"\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  });\n  const [series, setSeries] = useState([]);\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const response = await fetch(\"https://poloniex.com/public?command=returnChartData&currencyPair=USDT_ETH&start=1608336000&end=9999999999&period=86400\");\n    const dataPoints = await response.json();\n    const fulldataArr = dataPoints.map(point => {\n      const dateMsStr = point.date.toString() + \"000\";\n      console.log(dateMsStr);\n      return {\n        x: new Date(Number.parseInt(dateMsStr)),\n        y: [point.open, point.high, point.low, point.close]\n      };\n    }); //const quarterDataArr = extractData(dataPoints);\n\n    setSeries([{\n      data: [...fulldataArr]\n    }]);\n  };\n\n  function extractData(dataPoints) {\n    let arr = [];\n    const totalData = dataPoints.length;\n    const startPoint = Math.round(totalData / 4 * 3);\n\n    for (let i = startPoint; i < totalData; i++) {\n      arr.push({\n        x: new Date(dataPoints[i].date),\n        y: [dataPoints[i].open, dataPoints[i].high, dataPoints[i].low, dataPoints[i].close]\n      });\n    }\n\n    return arr;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ETHchart\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mixed-chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: series,\n          type: \"candlestick\",\n          width: \"800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CandleStickChart, \"xvMfL8j3Ff0d06m7XVgwxl+2E24=\");\n\n_c = CandleStickChart;\nexport default CandleStickChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandleStickChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","CandleStickChart","props","options","setOptions","chart","type","title","text","align","xaxis","yaxis","tooltip","enabled","series","setSeries","loadData","response","fetch","dataPoints","json","fulldataArr","map","point","dateMsStr","date","toString","console","log","x","Date","Number","parseInt","y","open","high","low","close","data","extractData","arr","totalData","length","startPoint","Math","round","i","push"],"sources":["/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/CandleStickChart.tsx"],"sourcesContent":["import { ApexOptions } from \"apexcharts\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nfunction CandleStickChart(props: any) {\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      type: \"candlestick\",\n    },\n    title: {\n      text: \"CandleStick Chart\",\n      align: \"left\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true,\n      },\n    },\n  });\n\n  const [series, setSeries] = useState<ApexAxisChartSeries>([]);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const response = await fetch(\n      \"https://poloniex.com/public?command=returnChartData&currencyPair=USDT_ETH&start=1608336000&end=9999999999&period=86400\"\n    );\n    const dataPoints = await response.json();\n\n    const fulldataArr = dataPoints.map((point: any) => {\n      const dateMsStr = point.date.toString() + \"000\";\n      console.log(dateMsStr);\n      return {\n        x: new Date(Number.parseInt(dateMsStr)),\n        y: [point.open, point.high, point.low, point.close],\n      };\n    });\n\n    //const quarterDataArr = extractData(dataPoints);\n\n    setSeries([\n      {\n        data: [...fulldataArr],\n      },\n    ]);\n  };\n\n  function extractData(dataPoints: any[]) {\n    let arr: any[] = [];\n    const totalData = dataPoints.length;\n    const startPoint = Math.round((totalData / 4) * 3);\n    for (let i = startPoint; i < totalData; i++) {\n      arr.push({\n        x: new Date(dataPoints[i].date),\n        y: [\n          dataPoints[i].open,\n          dataPoints[i].high,\n          dataPoints[i].low,\n          dataPoints[i].close,\n        ],\n      });\n    }\n    return arr;\n  }\n\n  return (\n    <div className=\"ETHchart\">\n      <div>\n        <div className=\"mixed-chart\">\n          <Chart\n            options={options}\n            series={series}\n            type=\"candlestick\"\n            width=\"800\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CandleStickChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}