{"ast":null,"code":"var _jsxFileName = \"/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/CandleStickChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CandleStickChart(props) {\n  _s();\n\n  const [options, setOptions] = useState({\n    chart: {\n      type: \"candlestick\"\n    },\n    title: {\n      text: \"CandleStick Chart\",\n      align: \"left\"\n    },\n    xaxis: {\n      type: \"datetime\"\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  });\n  const [series, setSeries] = useState({\n    series: [{\n      data: [{\n        x: new Date(),\n        y: []\n      }]\n    }]\n  });\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const response = await fetch(\"https://poloniex.com/public?command=returnChartData&currencyPair=USDT_ETH&start=1435699200&end=9999999999&period=86400\");\n    const dataPoints = await response.json();\n    const dataArr = dataPoints.map(point => {\n      return {\n        x: new Date(point.date),\n        y: [point.open, point.high, point.low, point.close]\n      };\n    });\n    setSeries({\n      series: [{\n        data: [...dataArr]\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mixed-chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: series.series,\n          type: \"candlestick\",\n          width: \"800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CandleStickChart, \"PuCjMTQIt4AkCfZUIN6D7mRDS94=\");\n\n_c = CandleStickChart;\nexport default CandleStickChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandleStickChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","CandleStickChart","props","options","setOptions","chart","type","title","text","align","xaxis","yaxis","tooltip","enabled","series","setSeries","data","x","Date","y","loadData","response","fetch","dataPoints","json","dataArr","map","point","date","open","high","low","close"],"sources":["/Users/saadamirpk/Documents/GitHub/eth-live/src/Components/CandleStickChart.tsx"],"sourcesContent":["import { ApexOptions } from \"apexcharts\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nfunction CandleStickChart(props: any) {\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      type: \"candlestick\",\n    },\n    title: {\n      text: \"CandleStick Chart\",\n      align: \"left\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true,\n      },\n    },\n  });\n\n  const [series, setSeries] = useState({\n    series: [\n      {\n        data: [{ x: new Date(), y: [] }],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const response = await fetch(\n      \"https://poloniex.com/public?command=returnChartData&currencyPair=USDT_ETH&start=1435699200&end=9999999999&period=86400\"\n    );\n    const dataPoints = await response.json();\n    const dataArr = dataPoints.map((point: any) => {\n      return {\n        x: new Date(point.date),\n        y: [point.open, point.high, point.low, point.close],\n      };\n    });\n    setSeries({\n      series: [\n        {\n          data: [...dataArr],\n        },\n      ],\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"row\">\n        <div className=\"mixed-chart\">\n          <Chart\n            options={options}\n            series={series.series}\n            type=\"candlestick\"\n            width=\"800\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CandleStickChart;\n"],"mappings":";;;AACA,OAAOA,KAAP,IAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAsC;EAAA;;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAc;IAClDM,KAAK,EAAE;MACLC,IAAI,EAAE;IADD,CAD2C;IAIlDC,KAAK,EAAE;MACLC,IAAI,EAAE,mBADD;MAELC,KAAK,EAAE;IAFF,CAJ2C;IAQlDC,KAAK,EAAE;MACLJ,IAAI,EAAE;IADD,CAR2C;IAWlDK,KAAK,EAAE;MACLC,OAAO,EAAE;QACPC,OAAO,EAAE;MADF;IADJ;EAX2C,CAAd,CAAtC;EAkBA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC;IACnCe,MAAM,EAAE,CACN;MACEE,IAAI,EAAE,CAAC;QAAEC,CAAC,EAAE,IAAIC,IAAJ,EAAL;QAAiBC,CAAC,EAAE;MAApB,CAAD;IADR,CADM;EAD2B,CAAD,CAApC;EAQArB,SAAS,CAAC,MAAM;IACdsB,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,QAAQ,GAAG,YAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wHAD0B,CAA5B;IAGA,MAAMC,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;IACA,MAAMC,OAAO,GAAGF,UAAU,CAACG,GAAX,CAAgBC,KAAD,IAAgB;MAC7C,OAAO;QACLV,CAAC,EAAE,IAAIC,IAAJ,CAASS,KAAK,CAACC,IAAf,CADE;QAELT,CAAC,EAAE,CAACQ,KAAK,CAACE,IAAP,EAAaF,KAAK,CAACG,IAAnB,EAAyBH,KAAK,CAACI,GAA/B,EAAoCJ,KAAK,CAACK,KAA1C;MAFE,CAAP;IAID,CALe,CAAhB;IAMAjB,SAAS,CAAC;MACRD,MAAM,EAAE,CACN;QACEE,IAAI,EAAE,CAAC,GAAGS,OAAJ;MADR,CADM;IADA,CAAD,CAAT;EAOD,CAlBD;;EAoBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE;QAAK,SAAS,EAAC,aAAf;QAAA,uBACE,QAAC,KAAD;UACE,OAAO,EAAEtB,OADX;UAEE,MAAM,EAAEW,MAAM,CAACA,MAFjB;UAGE,IAAI,EAAC,aAHP;UAIE,KAAK,EAAC;QAJR;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAjEQb,gB;;KAAAA,gB;AAmET,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}